
//Profile.tsx old
/*import useCurrentUser from "@/hooks/useCurrentUser";
import { NextPageContext } from "next";
import { getSession, useSession } from "next-auth/react";
import { useRouter } from "next/router";

export async function getServerSideProps(context: NextPageContext) {
  //we cannot use our serverAuth function because we are  in the client side
  const session = await getSession(context); //this will return a session object if the user is authenticated

  //if the user is not authenticated, we will redirect him to the authentication page
  if (!session) {
    return {
      redirect: {
        destination: "/auth",
        permanent: false,
      },
    };
  }
  //if the user is authenticated, we will return the session object
  return {
    props: {},
  };
}

const profiles = () => {
  const router = useRouter();
  const { data: user } = useCurrentUser();
  console.log(
    "ðŸš€ ~ file: profiles.tsx:26 ~ profiles ~ data:",
    user?.currentUser.name
  );
  return (
    <div className="flex items-center justify-center h-full">
      <div className="flex flex-col">
        <h1 className="text-3xl text-center text-white md:text-6xl">
          who is watching
        </h1>
        <div className="flex items-center justify-center gap-8 mt-10">
          <div className="cursor-pointer" onClick={() => router.push("/")}>
            <div className="flex-row mx-auto group w-44">
              <div className="relative flex items-center justify-center overflow-hidden border-2 border-transparent rounded h-44 w-44 group-hover:cursor-pointer group-hover:border-white">
                <img src="/images/default-blue.png" alt="profile" />
              </div>
              <div className="mt-4 text-2xl text-center text-gray-400 group-hover:text-white">
                {user?.currentUser.name}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default profiles;
*/
